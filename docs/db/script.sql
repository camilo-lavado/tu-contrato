-- Tablas
CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE NOT NULL
);

CREATE TABLE "users" (
  "id" uuid PRIMARY KEY,
  "email" varchar(255) UNIQUE NOT NULL,
  "password" text NOT NULL,
  "role_id" int,
  "is_email_confirmed" boolean,
  "reset_password_token" text,
  "reset_token_expires_at" timestamp,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "user_profiles" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid UNIQUE NOT NULL,
  "first_name" varchar(100),
  "last_name" varchar(100),
  "rut" varchar(20) UNIQUE,
  "phone" varchar(20),
  "address" text,
  "country" varchar(100),
  "region" varchar(100),
  "city" varchar(100),
  "birth_date" date,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "templates" (
  "id" uuid PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "description" text,
  "slug" varchar(100) UNIQUE NOT NULL,
  "content" text NOT NULL,
  "category" varchar(100),
  "is_public" boolean,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "template_fields" (
  "id" uuid PRIMARY KEY,
  "template_id" uuid,
  "key" varchar(100),
  "label" varchar(255),
  "type" varchar(50),
  "required" boolean,
  "order" int
);

CREATE TABLE "contracts" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid,
  "template_id" uuid,
  "data" jsonb NOT NULL,
  "generated_html" text,
  "pdf_url" text,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "contract_versions" (
  "id" uuid PRIMARY KEY,
  "contract_id" uuid,
  "data" jsonb,
  "generated_html" text,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "subscriptions" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid,
  "plan" varchar(50),
  "status" varchar(20),
  "started_at" timestamp,
  "expires_at" timestamp,
  "payment_provider" varchar(50),
  "external_reference" varchar(255),
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "payments" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid,
  "type" varchar(20),
  "amount" int,
  "currency" varchar(10),
  "status" varchar(20),
  "provider" varchar(50),
  "token_flow" varchar(255),
  "external_reference" varchar(255),
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "payment_callbacks" (
  "id" uuid PRIMARY KEY,
  "payment_id" uuid,
  "event_type" varchar(100),
  "payload" jsonb,
  "received_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "audit_logs" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid,
  "action" varchar(50),
  "entity" varchar(50),
  "entity_id" uuid,
  "metadata" jsonb,
  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP
);

-- Relaciones (FK)
ALTER TABLE "users" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");
ALTER TABLE "user_profiles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
ALTER TABLE "template_fields" ADD FOREIGN KEY ("template_id") REFERENCES "templates" ("id");
ALTER TABLE "contracts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
ALTER TABLE "contracts" ADD FOREIGN KEY ("template_id") REFERENCES "templates" ("id");
ALTER TABLE "contract_versions" ADD FOREIGN KEY ("contract_id") REFERENCES "contracts" ("id");
ALTER TABLE "subscriptions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
ALTER TABLE "payments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
ALTER TABLE "payment_callbacks" ADD FOREIGN KEY ("payment_id") REFERENCES "payments" ("id");
ALTER TABLE "audit_logs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

-- √çndices adicionales
CREATE INDEX idx_users_role_id ON users(role_id);
CREATE INDEX idx_contracts_user_id ON contracts(user_id);
CREATE INDEX idx_contracts_template_id ON contracts(template_id);
CREATE INDEX idx_contract_versions_contract_id ON contract_versions(contract_id);
CREATE INDEX idx_subscriptions_user_id ON subscriptions(user_id);
CREATE INDEX idx_subscriptions_status ON subscriptions(status);
CREATE INDEX idx_payments_user_id ON payments(user_id);
CREATE INDEX idx_payments_status ON payments(status);
CREATE INDEX idx_payments_external_ref ON payments(external_reference);
CREATE INDEX idx_audit_user_id ON audit_logs(user_id);
CREATE INDEX idx_audit_entity ON audit_logs(entity);
